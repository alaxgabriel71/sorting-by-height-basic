#include "beremiz.h"
#ifndef __POUS_H
#define __POUS_H

#include "accessor.h"
#include "iec_std_lib.h"

__DECLARE_ENUMERATED_TYPE(LOGLEVEL,
  LOGLEVEL__CRITICAL,
  LOGLEVEL__WARNING,
  LOGLEVEL__INFO,
  LOGLEVEL__DEBUG
)
// FUNCTION_BLOCK LOGGER
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,MSG)
  __DECLARE_VAR(LOGLEVEL,LEVEL)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,TRIG0)

} LOGGER;

void LOGGER_init__(LOGGER *data__, BOOL retain);
// Code part
void LOGGER_body__(LOGGER *data__);
// PROGRAM PROGRAM0
// Data part
typedef struct {
  // PROGRAM Interface - IN, OUT, IN_OUT variables

  // PROGRAM private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,HIGHSENSOR)
  __DECLARE_VAR(BOOL,LOWSENSOR)
  __DECLARE_VAR(BOOL,PALLETSENSOR)
  __DECLARE_VAR(BOOL,LOADED)
  __DECLARE_VAR(BOOL,ATLEFTENTRY)
  __DECLARE_VAR(BOOL,ATLEFTEXIT)
  __DECLARE_VAR(BOOL,ATRIGHTENTRY)
  __DECLARE_VAR(BOOL,ATRIGHTEXIT)
  __DECLARE_VAR(BOOL,START)
  __DECLARE_VAR(BOOL,RESET)
  __DECLARE_VAR(BOOL,STOP)
  __DECLARE_VAR(BOOL,EMERGENCYSTOP)
  __DECLARE_VAR(BOOL,AUTO)
  __DECLARE_VAR(BOOL,CONVEYORENTRY)
  __DECLARE_VAR(BOOL,LOAD)
  __DECLARE_VAR(BOOL,UNLOAD)
  __DECLARE_VAR(BOOL,TRANSFERLEFT)
  __DECLARE_VAR(BOOL,TRANSFERRIGHT)
  __DECLARE_VAR(BOOL,CONVEYORLEFT)
  __DECLARE_VAR(BOOL,CONVEYORRIGHT)
  __DECLARE_VAR(BOOL,STARTLIGHT)
  __DECLARE_VAR(BOOL,RESETLIGHT)
  __DECLARE_VAR(BOOL,STOPLIGHT)
  __DECLARE_VAR(BOOL,MEMORYRIGHT)
  __DECLARE_VAR(BOOL,MEMORYLEFT)
  __DECLARE_VAR(INT,COUNTER)
  CTU CTU0;
  R_TRIG R_TRIG1;

} PROGRAM0;

void PROGRAM0_init__(PROGRAM0 *data__, BOOL retain);
// Code part
void PROGRAM0_body__(PROGRAM0 *data__);
#endif //__POUS_H
